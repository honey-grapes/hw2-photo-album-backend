AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: Intelligent Photo Album
Resources:
  indexphotos:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: ./
      Description: ""
      MemorySize: 128
      Timeout: 5
      Handler: lambda_function.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      EphemeralStorage:
        Size: 512
      # FunctionName: indexphotoslambda
      Events:
        # S3Trigger:
        BucketEvent1:
          Type: S3
          Properties:
            # Bucket: !Ref s3backendpipeline
            Bucket: 
              Ref: Bucket1
            Events: 
              - s3:ObjectCreated:*
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      SnapStart:
        ApplyOn: None
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - rekognition:*
              Resource: '*'
            - Effect: Allow
              Action:
                - s3:*
                - s3-object-lambda:*
              Resource: '*'
            - Effect: Allow
              Action:
                - es:*
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:768026748931:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:768026748931:log-group:/aws/lambda/index-photos:*

      
      # Role: "arn:aws:iam::877755470769:role/admin-role-lambda"
      
      # Environment:
      #   Variables:
      #     REGION: us-east-1
      # Layers:
      #   - arn:aws:lambda:us-east-1:877755470769:layer:TestingWithES:4

  # searchphotos:
  #   Type: "AWS::Serverless::Function"
  #   Properties:
  #     FunctionName: searchphotoslambda
  #     Handler: search-photos.lambda_handler
  #     Runtime: python3.9
  #     CodeUri: ./
  #     Description: ""
  #     MemorySize: 128
  #     Timeout: 30
  #     Role: "arn:aws:iam::877755470769:role/admin-role-lambda"
  #     Events:
  #       Api1:
  #         Type: Api
  #         Properties:
  #           Path: /search
  #           Method: GET
  #     Environment:
  #       Variables:
  #         REGION: us-east-1
  #     Layers:
  #       - arn:aws:lambda:us-east-1:877755470769:layer:TestingWithES:4
  Bucket1:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  BucketPolicy1:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: Bucket1
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Deny
            Principal: '*'
            Resource:
              - arn:aws:s3:::Bucket1/*
              - arn:aws:s3:::Bucket1
            Condition:
              Bool:
                aws:SecureTransport: false
  searchphotos:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      EphemeralStorage:
        Size: 512
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api2:
          Type: Api
          Properties:
            Path: /search
            Method: GET
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      SnapStart:
        ApplyOn: None
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - rekognition:*
              Resource: '*'
            - Effect: Allow
              Action:
                - es:*
              Resource: '*'
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - lex:CreateUploadUrl
                - lex:ListBuiltInSlotTypes
                - lex:ListBots
                - lex:CreateTestSet
                - lex:ListTestSets
                - lex:ListBuiltInIntents
                - lex:ListImports
                - lex:ListTestExecutions
                - lex:ListExports
              Resource: '*'
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - lex:*
              Resource:
                - >-
                  arn:aws:lex:us-east-1:768026748931:bot-alias/L4DXTDFTQU/AUMMMGBSRD
                - arn:aws:lex:us-east-1:768026748931:bot/L4DXTDFTQU
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:768026748931:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:768026748931:log-group:/aws/lambda/search-photos:*
  # uncomment
  s3backendpipeline:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: s3backendpipeline
      PublicAccessBlockConfiguration:
        BlockPublicAcls: False
        BlockPublicPolicy: False
        IgnorePublicAcls: False
        RestrictPublicBuckets: False

  s3backendpipelinepolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref s3backendpipeline
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - s3:*
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref s3backendpipeline
                - /*
            Principal: '*'